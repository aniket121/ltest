exports[`<SignInProviders /> renders with default props 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className={undefined}>
    <p
        className={undefined}>
        Log in with
    </p>
    <div
        className={undefined}>
        <Unknown
            message="Log in with"
            provider="facebook" />
        <Unknown
            message="Log in with"
            provider="google" />
        <Unknown
            message="Log in with"
            provider="email" />
    </div>
</div>,
  "nodes": Array [
    <div
      className={undefined}>
      <p
            className={undefined}>
            Log in with
      </p>
      <div
            className={undefined}>
            <Unknown
                  message="Log in with"
                  provider="facebook" />
            <Unknown
                  message="Log in with"
                  provider="google" />
            <Unknown
                  message="Log in with"
                  provider="email" />
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 2,
      "_context": Object {},
      "_currentElement": <SignInProviders
        message="Log in with" />,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": StatelessComponent {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "message": "Log in with",
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className={undefined}>
          <p
                    className={undefined}>
                    Log in with
          </p>
          <div
                    className={undefined}>
                    <Unknown
                              message="Log in with"
                              provider="facebook" />
                    <Unknown
                              message="Log in with"
                              provider="google" />
                    <Unknown
                              message="Log in with"
                              provider="email" />
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className={undefined}>
          <p
                    className={undefined}>
                    Log in with
          </p>
          <div
                    className={undefined}>
                    <Unknown
                              message="Log in with"
                              provider="facebook" />
                    <Unknown
                              message="Log in with"
                              provider="google" />
                    <Unknown
                              message="Log in with"
                              provider="email" />
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SignInProviders
    message="Log in with" />,
}
`;
